// <auto-generated />
using System;
using DrMW.Cqrs.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DrMW.Cqrs.Repository.Migrations
{
    [DbContext(typeof(AppDb))]
    partial class AppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EduLevelId")
                        .HasColumnType("int");

                    b.Property<int>("EduTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EduLevelId");

                    b.HasIndex("EduTypeId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.GroupSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("GroupId", "SubjectId")
                        .IsUnique()
                        .HasFilter("[Deleted] = 0");

                    b.ToTable("GroupSubjects");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Questionnaires.EduLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bakalavır"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Master"
                        });
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Questionnaires.EduType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Əsas təhil"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Əlavə təhil"
                        });
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Military")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Təhsil alır"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bitirib"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xaric olub"
                        });
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("EduLevelId")
                        .HasColumnType("int");

                    b.Property<int>("EduTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EduLevelId");

                    b.HasIndex("EduTypeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("StatusId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Group", b =>
                {
                    b.HasOne("DrMW.Cqrs.Core.Edu.Questionnaires.EduLevel", "EduLevel")
                        .WithMany()
                        .HasForeignKey("EduLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrMW.Cqrs.Core.Edu.Questionnaires.EduType", "EduType")
                        .WithMany()
                        .HasForeignKey("EduTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EduLevel");

                    b.Navigation("EduType");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.GroupSubject", b =>
                {
                    b.HasOne("DrMW.Cqrs.Core.Edu.Group", "Group")
                        .WithMany("Subjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrMW.Cqrs.Core.Edu.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Subject", b =>
                {
                    b.HasOne("DrMW.Cqrs.Core.Edu.Questionnaires.EduLevel", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Detail", b =>
                {
                    b.HasOne("DrMW.Cqrs.Core.Students.Student", "Student")
                        .WithOne("Detail")
                        .HasForeignKey("DrMW.Cqrs.Core.Students.Detail", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Student", b =>
                {
                    b.HasOne("DrMW.Cqrs.Core.Edu.Questionnaires.EduLevel", "EduLevel")
                        .WithMany()
                        .HasForeignKey("EduLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrMW.Cqrs.Core.Edu.Questionnaires.EduType", "EduType")
                        .WithMany()
                        .HasForeignKey("EduTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrMW.Cqrs.Core.Edu.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DrMW.Cqrs.Core.Students.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EduLevel");

                    b.Navigation("EduType");

                    b.Navigation("Group");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Edu.Group", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("DrMW.Cqrs.Core.Students.Student", b =>
                {
                    b.Navigation("Detail");
                });
#pragma warning restore 612, 618
        }
    }
}
